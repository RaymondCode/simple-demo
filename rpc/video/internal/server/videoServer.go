// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"
	logic2 "tikstart/rpc/video/internal/logic"
	"tikstart/rpc/video/internal/svc"
	video2 "tikstart/rpc/video/video"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
	video2.UnimplementedVideoServer
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServer) GetVideoList(ctx context.Context, in *video2.GetVideoListRequest) (*video2.GetVideoListResponse, error) {
	l := logic2.NewGetVideoListLogic(ctx, s.svcCtx)
	return l.GetVideoList(in)
}

func (s *VideoServer) PublishVideo(ctx context.Context, in *video2.PublishVideoRequest) (*video2.Empty, error) {
	l := logic2.NewPublishVideoLogic(ctx, s.svcCtx)
	return l.PublishVideo(in)
}

func (s *VideoServer) UpdateVideo(ctx context.Context, in *video2.UpdateVideoRequest) (*video2.Empty, error) {
	l := logic2.NewUpdateVideoLogic(ctx, s.svcCtx)
	return l.UpdateVideo(in)
}

func (s *VideoServer) GetVideoListByAuthor(ctx context.Context, in *video2.GetVideoListByAuthorRequest) (*video2.GetVideoListByAuthorResponse, error) {
	l := logic2.NewGetVideoListByAuthorLogic(ctx, s.svcCtx)
	return l.GetVideoListByAuthor(in)
}

func (s *VideoServer) FavoriteVideo(ctx context.Context, in *video2.FavoriteVideoRequest) (*video2.Empty, error) {
	l := logic2.NewFavoriteVideoLogic(ctx, s.svcCtx)
	return l.FavoriteVideo(in)
}

func (s *VideoServer) UnFavoriteVideo(ctx context.Context, in *video2.UnFavoriteVideoRequest) (*video2.Empty, error) {
	l := logic2.NewUnFavoriteVideoLogic(ctx, s.svcCtx)
	return l.UnFavoriteVideo(in)
}

func (s *VideoServer) GetFavoriteVideoList(ctx context.Context, in *video2.GetFavoriteVideoListRequest) (*video2.GetFavoriteVideoListResponse, error) {
	l := logic2.NewGetFavoriteVideoListLogic(ctx, s.svcCtx)
	return l.GetFavoriteVideoList(in)
}

func (s *VideoServer) IsFavoriteVideo(ctx context.Context, in *video2.IsFavoriteVideoRequest) (*video2.IsFavoriteVideoResponse, error) {
	l := logic2.NewIsFavoriteVideoLogic(ctx, s.svcCtx)
	return l.IsFavoriteVideo(in)
}

func (s *VideoServer) CommentVideo(ctx context.Context, in *video2.CommentVideoRequest) (*video2.CommentVideoResponse, error) {
	l := logic2.NewCommentVideoLogic(ctx, s.svcCtx)
	return l.CommentVideo(in)
}

func (s *VideoServer) GetCommentList(ctx context.Context, in *video2.GetCommentListRequest) (*video2.GetCommentListResponse, error) {
	l := logic2.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}

func (s *VideoServer) DeleteVideoComment(ctx context.Context, in *video2.DeleteVideoCommentRequest) (*video2.Empty, error) {
	l := logic2.NewDeleteVideoCommentLogic(ctx, s.svcCtx)
	return l.DeleteVideoComment(in)
}

func (s *VideoServer) GetCommentInfo(ctx context.Context, in *video2.GetCommentInfoRequest) (*video2.GetCommentInfoResponse, error) {
	l := logic2.NewGetCommentInfoLogic(ctx, s.svcCtx)
	return l.GetCommentInfo(in)
}
