syntax = "v1"

type Empty {
}

type BasicResponse {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type (
	RegisterRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	RegisterResponse {
		BasicResponse
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

type (
	LoginRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}

	LoginResponse {
		BasicResponse
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

type (
	User {
		Id       int64  `json:"id"`
		Name     string `json:"name"`
		IsFollow bool   `json:"is_follow"`
	}

	GetUserInfoRequest {
		UserId int64  `form:"user_id"`
		Token  string `form:"token"`
	}

	GetUserInfoResponse {
		BasicResponse
		User User `json:"user"`
	}
)

type (
	FollowRequest {
		ToUserId   int64  `form:"to_user_id"`
		Token      string `form:"token"`
		ActionType int32  `form:"action_type"`
	}

	FollowResponse {
		BasicResponse
	}
)

type (
	Video {
		Id            int64  `json:"id"`
		Title         string `json:"title"`
		Author        User   `json:"author"`
		PlayUrl       string `json:"play_url"`
		CoverUrl      string `json:"cover_url"`
		FavoriteCount int64  `json:"favorite_count"`
		CommentCount  int64  `json:"comment_count"`
		IsFavorite    bool   `json:"is_favorite"`
	}

	GetVideoListRequest {
		LatestTime int64  `form:"latest_time,optional"`
		Token      string `form:"token,optional"`
	}

	GetVideoListResponse {
		BasicResponse
		Next_time int64   `json:"next_time"`
		VideoList []Video `json:"video_list"`
	}
)

@server(
	group: app
)
service tikstart {
	@handler Ping
	get /ping (Empty) returns (BasicResponse)
}

@server(
	group: user
	prefix: /douyin/user
)
service tikstart {
	@handler Register
	post /register (RegisterRequest) returns (RegisterResponse)

	@handler Login
	post /login (LoginRequest) returns (LoginResponse)
}

@server(
	group : user
	prefix: /douyin/user
	middleware: JwtAuth
)
service tikstart {
	@handler GetUserInfo
	get / (GetUserInfoRequest) returns (GetUserInfoResponse)
}

@server (
	group: social
	prefix: /douyin/relation
)
service tikstart {
	@handler Follow
	post /action (FollowRequest) returns (FollowResponse)
}